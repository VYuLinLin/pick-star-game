{"version":3,"sources":["assets/scripts/BtnPlay.js","assets/scripts/Game.js","assets/scripts/Player.js","assets/scripts/Star.js"],"names":["cc","Class","extends","Component","properties","showBtn","onLoad","systemEvent","on","Event","MOUSE","this","start","onDestroy","off","btnPrefab","default","type","Prefab","starPrefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","AudioClip","groundY","y","height","timer","starDuration","spawnNewStar","score","update","dt","gameOver","showBtnPlay","btnPlay","instantiate","node","addChild","getComponent","game","newStar","setPosition","getNewStarPosition","Math","random","randX","width","randY","jumpHeight","v2","gainScore","string","audioEngine","playEffect","stopAllActions","director","loadScene","jumpDuration","maxMoveSpeed","accel","accLeft","accRight","xSpeed","jumpAudio","setJumpAction","jumpUp","moveBy","easing","easeCubicActionOut","jumpDown","callback","callFunc","playJumpSound","repeatForever","sequence","onKeyDown","event","keyCode","macro","KEY","a","left","d","right","onKeyUp","runAction","SystemEvent","EventType","KEY_DOWN","KEY_UP","abs","x","pickRadius","getPlayerDistance","playerPos","getPosition","position","sub","mag","onPicked","destroy","opacityRatio","opacity","floor"],"mappings":"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","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    showBtn: true\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad () {\r\n    cc.systemEvent.on(cc.Event.MOUSE, this.start, this)\r\n  },\r\n  onDestroy() {\r\n    cc.systemEvent.off(cc.Event.MOUSE, this.start, this)\r\n  },\r\n  start() {\r\n    // this.game.player.initJump()\r\n    // console.log(this.game)\r\n  },\r\n\r\n  // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    // 引用预制资源开始按钮\r\n    btnPrefab: {\r\n      default: null,\r\n      type: cc.Prefab\r\n    },\r\n    // 引用预制资源星星\r\n    starPrefab: {\r\n      default: null,\r\n      type: cc.Prefab\r\n    },\r\n    // 星星产生后消失时间的随机范围\r\n    maxStarDuration: 0,\r\n    minStarDuration: 0,\r\n    // 地面节点，用于确定星星生成的高度\r\n    ground: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    // Player 节点，用于获取主角跳跃的高度，和控制主角行动开关\r\n    player: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    // score label 的引用\r\n    scoreDisplay: {\r\n      default: null,\r\n      type: cc.Label\r\n    },\r\n    // 得分音效资源\r\n    scoreAudio: {\r\n      default: null,\r\n      type: cc.AudioClip\r\n    }\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n    // 获取地平面的 y 轴坐标\r\n    this.groundY = this.ground.y + this.ground.height / 2\r\n    // 初始化计时器\r\n    this.timer = 0\r\n    this.starDuration = 0\r\n    // 生成一个新的星星\r\n    this.spawnNewStar()\r\n    // 显示开始按钮\r\n    // this.showBtnPlay()\r\n    // 初始化积分\r\n    this.score = 0\r\n  },\r\n  update(dt) {\r\n    // 毎帧更新计时器，超过限度还没有生成新的星星就会调用游戏失败逻辑\r\n    if (this.timer > this.starDuration) {\r\n      this.gameOver()\r\n    } else {\r\n      this.timer += dt\r\n    }\r\n  },\r\n  showBtnPlay() {\r\n    // 使用给定的模板在场景中生成一个新节点\r\n    let btnPlay = cc.instantiate(this.btnPrefab)\r\n    // 讲新增的节点添加到Canvas节点下面\r\n    this.node.addChild(btnPlay)\r\n    // 在开始按钮组件上暂存Game对象的引用\r\n    btnPlay.getComponent('BtnPlay').game = this\r\n  },\r\n  spawnNewStar() {\r\n    // 使用给定的模板在场景中生成一个新节点\r\n    let newStar = cc.instantiate(this.starPrefab)\r\n    // 讲新增的节点添加到Canvas节点下面\r\n    this.node.addChild(newStar)\r\n    // 为星星设置一个随机位置\r\n    newStar.setPosition(this.getNewStarPosition())\r\n    // 在星星组件上暂存Game对象的引用\r\n    newStar.getComponent('Star').game = this\r\n    // 重置计时器，根据消失时间范围随机取一个值\r\n    this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration)\r\n    this.timer = 0\r\n  },\r\n  getNewStarPosition() {\r\n    // 根据屏幕宽度，随机生成星星的x坐标\r\n    const randX = (Math.random() - .5) * 2 * this.node.width / 2\r\n    // 根据地平面位置和主角跳跃高度，随机生成星星的y轴坐标\r\n    const randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50\r\n    // 返回星星坐标\r\n    return cc.v2(randX, randY)\r\n  },\r\n  gainScore() {\r\n    // 更新scoreDisplay Label 的文字\r\n    this.scoreDisplay.string = `Score: ${++this.score}`\r\n    // 调用声音引擎播放得分音效\r\n    cc.audioEngine.playEffect(this.scoreAudio, false)\r\n  },\r\n  gameOver() {\r\n    this.player.stopAllActions() // 停止 player 节点的跳跃动作\r\n    cc.director.loadScene('game')\r\n  }\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    jumpHeight: 0, // 主角跳跃高度\r\n    jumpDuration: 0, // 主角跳跃持续时间\r\n    maxMoveSpeed: 0, // 最大移动速度\r\n    accel: 0, // 加速度\r\n    accLeft: false, // 是否左边加速\r\n    accRight: false, // 是否右边加速\r\n    xSpeed: 0, // 横向加速度值\r\n    // 跳跃音效资源\r\n    jumpAudio: {\r\n      default: null,\r\n      type: cc.AudioClip\r\n    }\r\n  },\r\n\r\n  setJumpAction() {\r\n    // 跳跃上升\r\n    const jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut())\r\n    // 下落\r\n    const jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionOut())\r\n    // 添加回调函数，用于在动作结束时调用我们定义的其他方法\r\n    const callback = cc.callFunc(this.playJumpSound, this)\r\n    // 不断重复,而且每次完成落地动作后调用回调来播放声音\r\n    return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback))\r\n  },\r\n\r\n  playJumpSound() {\r\n    // 调用声音引擎播放声音\r\n    cc.audioEngine.playEffect(this.jumpAudio, false)\r\n  },\r\n\r\n  onKeyDown(event) {\r\n    switch (event.keyCode) {\r\n      case cc.macro.KEY.a:\r\n      case cc.macro.KEY.left:\r\n        this.accLeft = true\r\n        break\r\n      case cc.macro.KEY.d:\r\n      case cc.macro.KEY.right:\r\n        this.accRight = true\r\n        break\r\n    }\r\n  },\r\n\r\n  onKeyUp(event) {\r\n    switch(event.keyCode) {\r\n      case cc.macro.KEY.a:\r\n      case cc.macro.KEY.left:\r\n        this.accLeft = false\r\n        break\r\n        case cc.macro.KEY.d:\r\n        case cc.macro.KEY.right:\r\n        this.accRight = false\r\n        break\r\n    }\r\n  },\r\n  // LIFE-CYCLE CALLBACKS: 生命周期回调函数\r\n  onLoad () {\r\n    // 初始化跳跃动作\r\n    this.node.runAction(this.setJumpAction())\r\n    // 加速度方向开关\r\n    this.accLeft = false\r\n    this.accRight = false\r\n\r\n    // 初始化键盘输入监听\r\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this)\r\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this)\r\n  },\r\n\r\n  onDestroy() {\r\n    // 取消键盘输入监听\r\n    cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this)\r\n    cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this)\r\n  },\r\n\r\n  update(dt) {\r\n    // 根据当前加速度方向毎帧更新速度\r\n    if (this.accLeft) {\r\n      this.xSpeed -= this.accel * dt\r\n    } else if (this.accRight) {\r\n      this.xSpeed += this.accel * dt\r\n    }\r\n    // 限制主角的速度不能超过最大值\r\n    if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\r\n      // 如果速度达到极限，使用最大速度与电流方向\r\n      this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed)\r\n    }\r\n    // 根据当前速度更新主角的位置\r\n    this.node.x += this.xSpeed * dt\r\n  }\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    // 星星和主角之间的距离小于这个数值时，就会完成收集\r\n    pickRadius: 4\r\n  },\r\n  getPlayerDistance() {\r\n    // 根据player节点位置判断距离\r\n    let playerPos = this.game.player.getPosition()\r\n    // 根据两点位置计算两点之间距离\r\n    let dist = this.node.position.sub(playerPos).mag()\r\n    return dist\r\n  },\r\n  onPicked() {\r\n    // 当星星被收集时，调用Game脚本中的接口，生成一个新的星星\r\n    this.game.spawnNewStar()\r\n    // 调用Game脚本中得得分方法\r\n    this.game.gainScore()\r\n    // 然后销毁当前星星节点\r\n    this.node.destroy()\r\n  },\r\n  update(dt) {\r\n    // 毎帧判断和主角之间的距离是否小于收集距离\r\n    if (this.getPlayerDistance() < this.pickRadius) {\r\n      // 调用收集行为\r\n      this.onPicked()\r\n    }\r\n    // 根据 Game 脚本中得计时器更新星星的透明度\r\n    let opacityRatio = 1 - this.game.timer / this.game.starDuration\r\n    const minOpacity = 50\r\n    this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity))\r\n  }\r\n});\r\n"],"sourceRoot":"/source/","file":"project.js"}